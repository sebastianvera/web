{"version":3,"sources":["profile.jpg","github.svg","twitter.svg","Profile.js","Pill.js","Links.js","App.js","index.js","registerServiceWorker.js"],"names":["module","exports","RoundedImage","styled","img","props","size","Link","a","Title","h1","Footer","p","Text","Profile","src","pic","alt","role","style","fontSize","textAlign","aria-label","href","Pill","div","height","defaultPillHeight","Icon","Links","github","twitter","Wrapper","FadeIn","keyframes","Top","Bottom","App","Component","ReactDOM","render","document","getElementById","navigator","window","addEventListener","swUrl","process","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error"],"mappings":"kFAAAA,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,yNCMrCC,EAAeC,IAAOC,IAAV,6KAEN,SAACC,GAAD,OAAWA,EAAMC,MAHT,OAIT,SAACD,GAAD,OAAWA,EAAMC,MAJR,OAKD,SAACD,GAAD,OAAYA,EAAMC,MALjB,KAKwC,KAKtDC,EAAOJ,IAAOK,EAAV,wEAKJC,EAAQN,IAAOO,GAAV,+GAMLC,EAASR,IAAOS,EAAV,4KASNC,EAAOV,IAAOS,EAAV,6GAyBKE,EAnBC,kBACd,6BACE,kBAACZ,EAAD,CAAca,IAAKC,IAAKV,KAAM,IAAKW,IAAI,2BACvC,kBAACR,EAAD,0BACA,kBAACI,EAAD,gCAC2B,IACzB,0BAAMK,KAAK,MAAMC,MAAO,CAACC,SAAU,MAAOC,UAAW,UAAWC,aAAW,QAA3E,gBAEQ,IAJV,6EAMK,kBAACf,EAAD,CAAMgB,KAAK,8BAAX,WANL,KAQA,kBAACZ,EAAD,wBACmB,IACjB,kBAACJ,EAAD,CAAMgB,KAAK,2BAAX,sB,kCCvCSC,EAbFrB,IAAOsB,IAAV,uPAKE,SAAApB,GAAK,OAAIA,EAAMqB,QAND,MAOP,SAAArB,GAAK,OAAIA,EAAMqB,OAAS,GAAKC,MACjC,SAAAtB,GAAK,OAAIA,EAAMqB,OAAS,GARb,MCMpBE,EAAOzB,IAAOC,IAAV,kFACE,SAAAC,GAAK,OAAIA,EAAMC,MAFH,MAGb,SAAAD,GAAK,OAAIA,EAAMC,MAHF,MAOlBC,EAAOJ,IAAOK,EAAV,2IAmBKqB,EAXD,kBACZ,kBAAC,EAAD,CAAMH,OAAQ,IACZ,kBAAC,EAAD,CAAMH,KAAK,oCACT,kBAACK,EAAD,CAAMb,IAAKe,IAAQxB,KAAM,MAE3B,kBAAC,EAAD,CAAMiB,KAAK,iCACT,kBAACK,EAAD,CAAMb,IAAKgB,IAASzB,KAAM,QCvB1B0B,EAAU7B,IAAOsB,IAAV,+JASPQ,EAASC,YAAH,4FAUNC,EAAMhC,IAAOsB,IAAV,gMAOMQ,GAGTG,EAASjC,IAAOsB,IAAV,oJACGQ,GAkBAI,E,4JAVb,WACE,OACE,kBAACL,EAAD,KACE,kBAACG,EAAD,KAAK,kBAAC,EAAD,OACL,kBAACC,EAAD,KAAQ,kBAAC,EAAD,Y,GALEE,a,MCpClBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SCKF,kBAAmBC,WAC9DC,OAAOC,iBAAiB,QAAQ,WAC9B,IAAMC,EAAK,UAAMC,OAAN,sBACXJ,UAAUK,cACPC,SAASH,GACTI,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfb,UAAUK,cAAcS,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBC,OAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,W","file":"static/js/main.bddba09c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.1a835eb0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/github.5fa736e0.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.f322a147.svg\";","import React from 'react';\nimport styled from 'styled-components';\n\nimport pic from './profile.jpg';\n\nconst defaultSize = 100;\nconst RoundedImage = styled.img`\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.6);\n  height: ${(props) => props.size || defaultSize}px;\n  width: ${(props) => props.size || defaultSize}px;\n  border-radius: ${(props) => (props.size || defaultSize) / 2}px;\n  user-drag: none;\n  user-select: none;\n`;\n\nconst Link = styled.a`\n  text-decoration: none;\n  color: orange;\n`;\n\nconst Title = styled.h1`\n  text-align: center;\n  color: #fafbfb;\n  font-family: 'Open Sans', sans-serif;\n`;\n\nconst Footer = styled.p`\n  text-align: center;\n  font-size: 1em;\n  color: #fafbfb;\n  font-family: 'Raleway', sans-serif;\n  font-style: italic;\n  margin-top: 2rem;\n`;\n\nconst Text = styled.p`\n  text-align: center;\n  color: #fafbfb;\n  font-family: 'Raleway', sans-serif;\n`;\n\nconst Profile = () => (\n  <div>\n    <RoundedImage src={pic} size={200} alt=\"Sebastian Vera picture\" />\n    <Title>SebastiÃ¡n Vera</Title>\n    <Text>\n      Fullstack Developer that{' '}\n      <span role=\"img\" style={{fontSize: '1em', textAlign: 'center'}} aria-label=\"love\">\n        ðŸ’š\n      </span>{' '}\n      react, golang and nodejs. I'm currently working as a Software Engineer\n      at <Link href=\"https://twitter.com/google\">@Google</Link>.\n    </Text>\n    <Footer>\n      Visit my blog at{' '}\n      <Link href=\"https://blog.apipath.io\">blog.apipath.io</Link>\n    </Footer>\n  </div>\n);\n\nexport default Profile;\n","import styled from 'styled-components';\n\nconst defaultPillHeight = 80;\nconst Pill = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n\n  height: ${props => props.height || defaultPillHeight}px;\n  border-radius: ${props => props.height / 2 || defaultPillHeight / 2}px;\n  padding: 0 ${props => props.height / 2 || defaultPillHeight}px;\n\n  background-color: #FAFBFB;\n  box-shadow: 0 2px 12px rgba(0, 0, 0, .4);\n`;\n\nexport default Pill;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport github from './github.svg';\nimport twitter from './twitter.svg';\nimport Pill from './Pill';\n\nconst defaultIconSize = 20;\nconst Icon = styled.img`\n  height: ${props => props.size || defaultIconSize}px;\n  width: ${props => props.size || defaultIconSize}px;\n  padding: 0 5px;\n`;\n\nconst Link = styled.a`\n  text-align: center;\n  color: #FAFBFB;\n  font-family: 'Open Sans', sans-serif;\n\n  text-decoration: none;\n`;\n\nconst Links = () => (\n  <Pill height={50}>\n    <Link href=\"https://github.com/sebastianvera\">\n      <Icon src={github} size={20} />\n    </Link>\n    <Link href=\"https://twitter.com/sebalvear\">\n      <Icon src={twitter} size={20} />\n    </Link>\n  </Pill>\n);\n\nexport default Links;\n","import React, { Component } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport Profile from './Profile';\nimport Links from './Links';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 100vw;\n  height: 100vh;\n  text-align: center;\n`;\n\nconst FadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n`;\n\nconst Top = styled.div`\n  flex-grow: 1;\n  padding: 0 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  animation: ${FadeIn} 2s ease-out;\n`;\n\nconst Bottom = styled.div`\n  animation: ${FadeIn} 2s ease-out;\n  padding: 10px 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nclass App extends Component {\n  render() {\n    return (\n      <Wrapper>\n        <Top><Profile /></Top>\n        <Bottom><Links /></Bottom>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n          registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n              if (installingWorker.state === 'installed') {\n                if (navigator.serviceWorker.controller) {\n                  // At this point, the old content will have been purged and\n                  // the fresh content will have been added to the cache.\n                  // It's the perfect time to display a \"New content is\n                  // available; please refresh.\" message in your web app.\n                  console.log('New content is available; please refresh.');\n                } else {\n                  // At this point, everything has been precached.\n                  // It's the perfect time to display a\n                  // \"Content is cached for offline use.\" message.\n                  console.log('Content is cached for offline use.');\n                }\n              }\n            };\n          };\n        })\n        .catch(error => {\n          console.error('Error during service worker registration:', error);\n        });\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}